import math
def prime(num):
    #Check if number is prime
    factors = 0
    for factor in range(1, int(num) + 1):
        if num % factor == 0:
            factors += 1
    if factors == 2:
        return 1
    else:
        return 0

def numOfDigits(num):
    #Find how many digits are in a number
    length = 0
    for i in str(num):
        length += 1
    return length

def removeNum(num, direction):
    #Remove the leftmost digit
    if direction == "left":
        use = True
        for i in str(num):
            if use == True:
                num -= int(i) * math.pow(10, numOfDigits(int(num)) - 1)
                use = False
    
    #Remove the rightmost digit
    if direction == "right":
        count = 1
        for i in str(num):
            if count == numOfDigits(num):
                num -= int(i)
                num = int(num / 10)
            else:
                count += 1
    return(num)
    
def truncatable(num):
    
    #find if number is left truncatable
    startNum = num
    numType = 0
    total = 0
    digits = numOfDigits(num)
    for i in range(digits):
        total += prime(num)
        num = removeNum(num, "left")
    if total == digits:
        numType += 1
        
    #Find if number is right truncatable
    num = startNum
    total = 0
    for i in range(digits):
        total += prime(num)
        num = removeNum(num, "right")
    if total == digits:
        numType += 2
        
    #Determine if number is left, right, both, or neither type of truncatable prime
    if numType == 3:
        return("both a left and right truncatable prime")
    elif numType == 2:
        return("a right truncatable prime")
    elif numType == 1:
        return("a left truncatable prime")
    else:
        return("not a left or right truncatable prime")
     
     
#Main   
numbers = [9137, 5939, 317, 5, 139, 103]
for number in numbers:
    print(str(number) + " is " + truncatable(number))
